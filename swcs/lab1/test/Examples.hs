module Examples where

import Data.Graph.Inductive.Graph
import Data.Graph.Inductive.PatriciaTree

import qualified Data.Map.Strict as M

import IGE.Types

testGr :: Gr Weight Weight
testGr = mkGraph
  [ (1 , 1)
  , (2 , 2)
  , (3 , 1)
  , (4 , 5)
  , (5 , 1)
  , (6 , 4)
  , (7 , 3)
  , (8 , 6)
  , (9 , 2)
  , (10, 3)
  , (11, 4)
  , (12, 1)
  , (13, 5)
  , (14, 5)
  , (15, 2)
  , (16, 1)
  , (17, 2)
  , (18, 5)
  , (19, 1)
  , (20, 3)
  ]
  [ (1 , 14, 3)
  , (2 , 9 , 1)
  , (2 , 10, 2)
  , (3 , 14, 3)
  , (3 , 10, 1)
  , (4 , 15, 1)
  , (5 , 11, 4)
  , (5 , 16, 2)
  , (6 , 12, 1)
  , (6 , 13, 2)
  , (7 , 13, 2)
  , (8 , 17, 3)
  , (9 , 14, 3)
  , (3 , 14, 3)
  , (10, 15, 2)
  , (11, 15, 1)
  , (12, 16, 2)
  , (12, 17, 3)
  , (13, 17, 1)
  , (14, 18, 1)
  , (10, 18, 2)
  , (15, 18, 2)
  , (15, 19, 3)
  , (16, 20, 3)
  , (17, 20, 1)
  ]

testGrCriticalPaths :: M.Map Node (Weight, Weight)
testGrCriticalPaths = M.fromList
  [ (1 , (11, 3))
  , (2 , (14, 4))
  , (3 , (11, 4))
  , (4 , (12, 3))
  , (5 , (12, 4))
  , (6 , (14, 4))
  , (7 , (13, 4))
  , (8 , (11, 3))
  , (9 , (12, 3))
  , (10, (10, 3))
  , (11, (11, 3))
  , (12, (6, 3))
  , (13, (10, 3))
  , (14, (10, 2))
  , (15, (7, 2))
  , (16, (4, 2))
  , (17, (5, 2))
  , (18, (5, 1))
  , (19, (1, 1))
  , (20, (3, 1))
  ]

testGrTaskQueue :: [Node]
testGrTaskQueue =
  [2, 6, 7, 5, 3, 4, 9, 1, 8, 11, 10, 13, 14, 12, 15, 17, 16, 18, 20, 19]
